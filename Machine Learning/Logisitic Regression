# Import Necessary Packages
library(ggplot2)
library(repr)
library(caret)
library(ROCR)
library(pROC)

options(repr.plot.width=4, repr.plot.height=4) # Set the initial plot area dimensions

# Using a specific data set 

credit = read.csv('German_Credit_Preped.csv')  # Will link to dataset soon
dim(credit)
head(credit)

# looking at the class imbalance

credit$bad_credit <- ifelse(credit$bad_credit == 1, 'bad', 'good')
credit$bad_credit <- factor(credit$bad_credit, levels = c('bad', 'good'))
credit$bad_credit[1:5]


set.seed(1455)
# Randomly sample cases to create independent training and test data (70/30 split)
partition = createDataPartition(credit[,'bad_credit'], times = 1, p = 0.7, list = FALSE)
training = credit[partition,]    # Create the training sample
dim(training)
test = credit[-partition,]       # Create the test sample
dim(test)

# Scale the numeric features

num_cols = c('loan_duration_mo', 'loan_amount', 'payment_pcnt_income', 'age_yrs')
preProcValues <- preProcess(training[,num_cols], method = c("center", "scale"))

training[,num_cols] = predict(preProcValues, training[,num_cols])
test[,num_cols] = predict(preProcValues, test[,num_cols])
head(training[,num_cols])

# Constructing Logistic Regression Model

set.seed(5566)
logistic_mod = glm(bad_credit ~ loan_duration_mo + loan_amount +  
                                payment_pcnt_income + age_yrs + 
                                checking_account_status + credit_history + 
                                purpose + gender_status + time_in_residence +
                                property, 
                   family = binomial, data = training)
                   
                   
logistic_mod$coefficients


test$probs = predict(logistic_mod, newdata = test, type = 'response')
test[1:20, c('bad_credit','probs')]

# Examining the prediction model

score_model = function(df, threshold){
    df$score = ifelse(df$probs < threshold, 'bad', 'good')
    df
}

test = score_model(test, 0.5)
test[1:20, c('bad_credit','probs','score')]


